import { type Disposable, Pass, type Resizable } from 'postprocessing';
import * as THREE from 'three';
import type { GodraysBlurParams } from './index';
export declare const GODRAYS_BLUR_RESOLUTION_SCALE = 1;
declare class BilateralFilterMaterial extends THREE.ShaderMaterial {
    constructor(input: THREE.Texture);
}
export declare class BilateralFilterPass extends Pass implements Resizable, Disposable {
    material: BilateralFilterMaterial;
    constructor(input: THREE.Texture);
    setSize(width: number, height: number): void;
    render(renderer: THREE.WebGLRenderer, _inputBuffer: THREE.WebGLRenderTarget, outputBuffer: THREE.WebGLRenderTarget, _deltaTime?: number | undefined, _stencilTest?: boolean | undefined): void;
    updateUniforms(params: GodraysBlurParams): void;
    dispose(): void;
}
export {};
